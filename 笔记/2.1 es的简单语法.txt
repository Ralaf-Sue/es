GET /_cat/health?v 

GET /_cat/indices?v

PUT /test_index?pretty

DELETE /test_index?pretty

PUT /ecomemerce/product/1 
{
  "name":"gaolujie yagao",
  "desc":"gaoxiao meibai",
  "price":30,
  "producer":"gaolujie producer",
  "tags":["meibai","fangzhu"]
}

PUT /ecomemerce/product/2 
{
  "name":"jiajieshi yagao",
  "desc":"youxiao fangzhu",
  "price":25,
  "producer":"jiajiezhi producer",
  "tags":["fangzhu"]
}

POST /ecomemerce/product/2/_update
{"doc":{
  "name":"jiaqiangban jiajieshi yagao"
}}

PUT /ecomemerce/product/3
{
  "name":"zhonghua yagao",
  "desc":"caoben zhiwu",
  "price":40,
  "producer":"zhonghua producer",
  "tags":["qingxin"]
}

GET  /ecomemerce/product/2

DELETE /ecomemerce/product/2

GET /ecomemerce/product/_search

GET /ecomemerce/product/_search?q=name:yagao&sort=price:desc

#查询所有商品
GET /ecomemerce/product/_search
{
  "query":{
    "match_all": {}
  }
}

#查询名称包含yagao的商品，同时按照价格降序排序
GET /ecomemerce/product/_search
{
  "query":{
    "match":{"name":"yagao"}
    
  },
  "sort":[
    {"price":"desc"}
    ]
}

#分页
GET /ecomemerce/product/_search
{
  "query":{
    "match_all": {}
  },
  "from":1,
  "size":1
}

#指定字段
GET /ecomemerce/product/_search
{
  "query":{
    "match_all":{}
  },
  "_source": ["name","price"]
}

#搜索商品名称包含yagao，而且售价大于25元的商品
GET /ecomemerce/product/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "name": "yagao"
        }}
      ],
      "filter": {
        "range": {
          "price": {
            "gt": 25,
            "lt":35
          }
        }
      }
    }
  }
}

PUT  /ecomemerce/product/4
{
  "name":"special yagao",
  "desc":"special meibai",
  "price":50,
  "producer":"special yagao producer",
  "tags":["meibai"]
  
}

GET /ecomemerce/product/_search
{
  "query": {"match": {
    "producer": "yagao producer"
  }}
}

GET /ecomemerce/product/_search
{
  "query":{
    "match_phrase": {
      "producer": "yagao producer"
    }
  }
}

#高亮
GET  /ecomemerce/product/_search
{
  "query": {"match": {
    "producer": "producer"
  }},
  "highlight": {
    "fields": {"producer":{}}
  }
}

#第一个分析需求：计算每个tag下的商品数量
GET /ecomemerce/product/_search
{ "size": 0, 
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags"
      }
    }
  }
}

PUT  /ecomemerce/_mapping/product
{
  "properties": {
    "tags":{
      "type": "string",
      "fielddata": true
    }
  }
}

#第二个聚合分析的需求：对名称中包含yagao的商品，计算每个tag下的商品数量
GET /ecomemerce/product/_search
{ "query": {"match": {
  "name": "yagao"
}}, 
  "size": 0, 
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags"
      }
    }
  }
}


#第三个聚合分析的需求：先分组，再算每组的平均值，计算每个tag下的商品的平均价格
GET  /ecomemerce/product/_search
{
  "size": 0,
  "aggs": {
    "group_by_tags": {
      "terms": {
        "field": "tags"
      },
      "aggs": {
        "avg_price": {
          "avg": {
            "field": "price"
          }
        }
      }
    }
  }
}


#第四个数据分析需求：计算每个tag下的商品的平均价格，并且按照平均价格降序排序
GET  /ecomemerce/product/_search
{
  "size": 0,
  "aggs": {
    "group_by_tag": {
      "terms": {
        "field": "tags",
        "order": {
          "price_avg": "asc"
        }
      },
      "aggs": {
        "price_avg": {
          "avg": {
            "field": "price"
          }
        }
      }
    }
  }
}

#按照指定的价格范围区间进行分组，然后在每组内再按照tag进行分组，最后再计算每组的平均价格
GET /ecomemerce/product/_search
{
  "size": 0,
  "aggs": {
    "group_by_price": {
      "range": {
        "field": "price",
        "ranges": [
          {
            "from": 0,
            "to": 20
          },
           {
            "from": 20,
            "to": 40
          },
           {
            "from": 40,
            "to": 60
          }
        ]
      },
      "aggs": {
        "group_by_tags": {
          "terms": {
            "field": "tags",
            "order": {
              "avg_price": "desc"
            }
          },
          "aggs": {
            "avg_price": {
              "avg": {"field": "price"}
            }
          }
        }
      }
    }
  }
}